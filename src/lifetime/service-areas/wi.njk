---
layout: layout.njk
title: "Service Areas in Wisconsin - Lifetime Home Services"
description: "Lifetime Home Services provides radon testing, duct sealing, and epoxy floor coatings across Wisconsin. Find your ZIP code and service area."
canonical: "https://lifetimehomeservices.com/lifetime/service-areas/wi"
brand: lhs
state: wi
---

{% set stateData = serviceAreas.wi %}
{% set stateName = "Wisconsin" %}
{% set totalZips = stateData.areas | map(attribute="zips") | list | join(",") | split(",") | length %}
{% set totalAreas = stateData.areas | length %}

<div class="state-service-area-page">
    <!-- Hero Section -->
    <section class="hero-section state-hero">
        <div class="container">
            <div class="hero-content">
                <h1>Service Areas in {{ stateName }}</h1>
                <p class="hero-subtitle">Serving {{ totalZips }} ZIP codes across {{ totalAreas }} areas in {{ stateName }}</p>
                <div class="services-offered">
                    <span class="service-tag">Radon Testing & Mitigation</span>
                    <span class="service-tag">Duct Cleaning & Sealing</span>
                    <span class="service-tag">Epoxy Floor Coatings</span>
                </div>
            </div>
        </div>
        
        <!-- Wisconsin State Silhouette -->
        <div class="state-silhouette wisconsin-silhouette">
            <svg viewBox="0 0 400 300" class="state-outline">
                <path d="M50,50 L350,50 L350,200 L300,250 L100,250 L50,200 Z" fill="rgba(44, 90, 160, 0.05)" stroke="rgba(44, 90, 160, 0.1)" stroke-width="2"/>
                <text x="200" y="150" text-anchor="middle" font-family="Inter, sans-serif" font-weight="bold" font-size="24" fill="rgba(44, 90, 160, 0.1)">WISCONSIN</text>
            </svg>
        </div>
    </section>

    <!-- Search and Filter Section -->
    <section class="search-section">
        <div class="container">
            <div class="search-box-container">
                <label for="area-search" class="search-label">Search by city or ZIP code</label>
                <input 
                    type="text" 
                    id="area-search" 
                    class="search-input" 
                    placeholder="Search by city or ZIP..."
                    autocomplete="off"
                    aria-describedby="search-help"
                >
                <div id="search-help" class="search-help">
                    Type a city name or ZIP code to find your service area
                </div>
                <div id="search-results" class="search-results" role="region" aria-live="polite"></div>
            </div>
        </div>
    </section>

    <!-- A-Z Accordion Section -->
    <section class="accordion-section">
        <div class="container">
            <h2>All Service Areas</h2>
            <div class="alphabet-nav">
                {% for letter in "ABCDEFGHIJKLMNOPQRSTUVWXYZ" %}
                    <button class="letter-nav" data-letter="{{ letter }}">{{ letter }}</button>
                {% endfor %}
            </div>
            
            <div class="areas-accordion" id="areas-accordion">
                {% set areasByLetter = {} %}
                {% for area in stateData.areas %}
                    {% set firstLetter = area.name[0] | upper %}
                    {% if not areasByLetter[firstLetter] %}
                        {% set areasByLetter = areasByLetter | merge({(firstLetter): []}) %}
                    {% endif %}
                    {% set areasByLetter = areasByLetter | merge({(firstLetter): (areasByLetter[firstLetter] + [area])}) %}
                {% endfor %}

                {% for letter in "ABCDEFGHIJKLMNOPQRSTUVWXYZ" %}
                    {% if areasByLetter[letter] %}
                        <details class="accordion-group" data-letter="{{ letter }}">
                            <summary class="accordion-header">
                                <span class="letter-badge">{{ letter }}</span>
                                <span class="letter-count">{{ areasByLetter[letter] | length }} areas</span>
                                <span class="accordion-icon" aria-hidden="true">â–¼</span>
                            </summary>
                            <div class="accordion-content">
                                <div class="area-cards">
                                    {% for area in areasByLetter[letter] %}
                                        <div class="area-card" data-area="{{ area.name | lower }}" data-zips="{{ area.zips | join(' ') }}">
                                            <h3 class="area-name">{{ area.name }}</h3>
                                            {% if area.aka %}
                                                <p class="area-aka">Also known as: {{ area.aka | join(', ') }}</p>
                                            {% endif %}
                                            <div class="zip-codes">
                                                <span class="zip-label">ZIP codes:</span>
                                                <div class="zip-list">
                                                    {% for zip in area.zips %}
                                                        <span class="zip-code">{{ zip }}</span>
                                                    {% endfor %}
                                                </div>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                        </details>
                    {% endif %}
                {% endfor %}
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class="cta-section">
        <div class="container">
            <div class="cta-content">
                <h2>Ready to Get Started?</h2>
                <p>Contact us today for a free estimate on radon testing, duct sealing, or epoxy floor coatings in your area.</p>
                <div class="cta-buttons">
                    <a href="tel:+18339416888" class="btn btn-primary">
                        <span class="btn-icon">ðŸ“ž</span>
                        Call (833) 941-6888
                    </a>
                    <a href="/lifetime/contact" class="btn btn-secondary">Get Free Estimate</a>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- JSON-LD Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "LocalBusiness",
  "name": "Lifetime Home Services",
  "description": "Professional radon testing, duct sealing, and epoxy floor coatings in Wisconsin",
  "telephone": "+1-833-941-6888",
  "url": "https://lifetimehomeservices.com",
  "logo": "https://lifetimehomeservices.com/assets/images/common/lifetime-logo.png",
  "address": {
    "@type": "PostalAddress",
    "addressCountry": "US",
    "addressRegion": "WI",
    "addressLocality": "Milwaukee"
  },
  "areaServed": [
    {% for area in stateData.areas %}
        {% for zip in area.zips %}
            {
                "@type": "PostalAddress",
                "addressCountry": "US",
                "addressRegion": "WI",
                "postalCode": "{{ zip }}",
                "addressLocality": "{{ area.name }}"
            }{% if not loop.last %},{% endif %}
        {% endfor %}{% if not loop.last %},{% endif %}
    {% endfor %}
  ],
  "hasOfferCatalog": {
    "@type": "OfferCatalog",
    "name": "Home Services",
    "itemListElement": [
      {
        "@type": "Service",
        "name": "Radon Testing",
        "description": "Professional radon testing services for Wisconsin homes"
      },
      {
        "@type": "Service", 
        "name": "Radon Mitigation",
        "description": "EPA-certified radon mitigation systems installation"
      },
      {
        "@type": "Service",
        "name": "Duct Cleaning & Sealing",
        "description": "AeroSeal duct sealing and cleaning services"
      },
      {
        "@type": "Service",
        "name": "Epoxy Floor Coatings",
        "description": "Professional epoxy floor coating installation"
      }
    ]
  },
  "openingHours": "Mo-Su 08:00-20:00",
  "priceRange": "$$"
}
</script>

<style>
    /* State Service Area Page Styles */
    .state-service-area-page {
        min-height: 100vh;
    }

    /* Hero Section */
    .state-hero {
        background: linear-gradient(135deg, var(--primary-blue) 0%, #1e3d6f 100%);
        color: white;
        padding: 4rem 0 3rem;
        position: relative;
        overflow: hidden;
    }

    .state-hero .hero-content {
        text-align: center;
        position: relative;
        z-index: 2;
    }

    .state-hero h1 {
        font-size: clamp(2.5rem, 5vw, 4rem);
        font-weight: 700;
        margin-bottom: 1rem;
        line-height: 1.2;
    }

    .hero-subtitle {
        font-size: 1.25rem;
        margin-bottom: 2rem;
        opacity: 0.9;
    }

    .services-offered {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1rem;
        margin-top: 2rem;
    }

    .service-tag {
        background: rgba(255, 255, 255, 0.2);
        padding: 0.5rem 1rem;
        border-radius: 25px;
        font-size: 0.9rem;
        font-weight: 500;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    /* State Silhouette */
    .state-silhouette {
        position: absolute;
        top: 50%;
        right: 5%;
        transform: translateY(-50%);
        width: 300px;
        height: 200px;
        opacity: 0.1;
        z-index: 1;
    }

    .state-outline {
        width: 100%;
        height: 100%;
    }

    /* Search Section */
    .search-section {
        padding: 3rem 0;
        background: #f8f9fa;
    }

    .search-box-container {
        max-width: 600px;
        margin: 0 auto;
        text-align: center;
    }

    .search-label {
        display: block;
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: var(--text-dark);
    }

    .search-input {
        width: 100%;
        padding: 1rem 1.5rem;
        font-size: 1.1rem;
        border: 2px solid #e0e0e0;
        border-radius: 50px;
        background: white;
        transition: all 0.3s ease;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .search-input:focus {
        outline: none;
        border-color: var(--primary-blue);
        box-shadow: 0 0 0 3px rgba(44, 90, 160, 0.1);
    }

    .search-help {
        font-size: 0.9rem;
        color: #666;
        margin-top: 0.5rem;
    }

    .search-results {
        margin-top: 1rem;
        text-align: left;
    }

    .search-result {
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 0.5rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .search-result h4 {
        margin: 0 0 0.5rem 0;
        color: var(--primary-blue);
    }

    .search-result .zip-codes {
        font-size: 0.9rem;
        color: #666;
    }

    /* Accordion Section */
    .accordion-section {
        padding: 4rem 0;
    }

    .accordion-section h2 {
        text-align: center;
        margin-bottom: 2rem;
        font-size: 2.5rem;
        color: var(--text-dark);
    }

    .alphabet-nav {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 0.5rem;
        margin-bottom: 3rem;
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 15px;
    }

    .letter-nav {
        width: 40px;
        height: 40px;
        border: 2px solid #e0e0e0;
        background: white;
        border-radius: 50%;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .letter-nav:hover,
    .letter-nav.active {
        background: var(--primary-blue);
        color: white;
        border-color: var(--primary-blue);
        transform: scale(1.1);
    }

    .letter-nav:disabled {
        opacity: 0.3;
        cursor: not-allowed;
    }

    /* Accordion Groups */
    .areas-accordion {
        max-width: 1000px;
        margin: 0 auto;
    }

    .accordion-group {
        margin-bottom: 1rem;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        overflow: hidden;
        background: white;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }

    .accordion-header {
        padding: 1.5rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 1rem;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        list-style: none;
    }

    .accordion-header:hover {
        background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);
    }

    .accordion-group[open] .accordion-header {
        background: linear-gradient(135deg, var(--primary-blue) 0%, #1e3d6f 100%);
        color: white;
    }

    .letter-badge {
        width: 40px;
        height: 40px;
        background: var(--primary-blue);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 1.2rem;
    }

    .accordion-group[open] .letter-badge {
        background: white;
        color: var(--primary-blue);
    }

    .letter-count {
        flex: 1;
    }

    .accordion-icon {
        transition: transform 0.3s ease;
    }

    .accordion-group[open] .accordion-icon {
        transform: rotate(180deg);
    }

    .accordion-content {
        padding: 2rem;
    }

    /* Area Cards */
    .area-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .area-card {
        background: #f8f9fa;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        padding: 1.5rem;
        transition: all 0.3s ease;
    }

    .area-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        border-color: var(--primary-blue);
    }

    .area-name {
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--primary-blue);
    }

    .area-aka {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 1rem;
        font-style: italic;
    }

    .zip-codes {
        margin-top: 1rem;
    }

    .zip-label {
        font-weight: 600;
        color: var(--text-dark);
        display: block;
        margin-bottom: 0.5rem;
    }

    .zip-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .zip-code {
        background: var(--primary-blue);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 500;
        font-family: 'Courier New', monospace;
    }

    /* CTA Section */
    .cta-section {
        background: linear-gradient(135deg, var(--primary-blue) 0%, #1e3d6f 100%);
        color: white;
        padding: 4rem 0;
        text-align: center;
    }

    .cta-content h2 {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    .cta-content p {
        font-size: 1.2rem;
        margin-bottom: 2rem;
        opacity: 0.9;
    }

    .cta-buttons {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1rem;
    }

    .btn {
        padding: 1rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.1rem;
    }

    .btn-primary {
        background: #ffd700;
        color: var(--primary-blue);
        border: 2px solid #ffd700;
    }

    .btn-primary:hover {
        background: #ffed4e;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 215, 0, 0.3);
    }

    .btn-secondary {
        background: transparent;
        color: white;
        border: 2px solid white;
    }

    .btn-secondary:hover {
        background: white;
        color: var(--primary-blue);
        transform: translateY(-2px);
    }

    .btn-icon {
        font-size: 1.2rem;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .state-hero {
            padding: 3rem 0 2rem;
        }

        .state-hero h1 {
            font-size: 2rem;
        }

        .hero-subtitle {
            font-size: 1.1rem;
        }

        .services-offered {
            flex-direction: column;
            align-items: center;
        }

        .state-silhouette {
            display: none;
        }

        .search-section {
            padding: 2rem 0;
        }

        .accordion-section {
            padding: 3rem 0;
        }

        .accordion-section h2 {
            font-size: 2rem;
        }

        .alphabet-nav {
            gap: 0.25rem;
        }

        .letter-nav {
            width: 35px;
            height: 35px;
            font-size: 0.9rem;
        }

        .accordion-header {
            padding: 1rem;
            font-size: 1rem;
        }

        .letter-badge {
            width: 35px;
            height: 35px;
            font-size: 1rem;
        }

        .area-cards {
            grid-template-columns: 1fr;
        }

        .cta-content h2 {
            font-size: 2rem;
        }

        .cta-buttons {
            flex-direction: column;
            align-items: center;
        }

        .btn {
            width: 100%;
            max-width: 300px;
            justify-content: center;
        }
    }

    /* Print Styles */
    @media print {
        .search-section,
        .cta-section {
            display: none;
        }
        
        .accordion-group {
            break-inside: avoid;
        }
    }

    /* High Contrast Mode */
    @media (prefers-contrast: high) {
        .state-silhouette {
            display: none;
        }
        
        .service-tag {
            background: white;
            color: var(--primary-blue);
            border: 2px solid var(--primary-blue);
        }
    }

    /* Reduced Motion */
    @media (prefers-reduced-motion: reduce) {
        .letter-nav,
        .area-card,
        .btn {
            transition: none;
        }
        
        .letter-nav:hover,
        .area-card:hover,
        .btn:hover {
            transform: none;
        }
    }
</style>

<script>
    // Search functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('area-search');
        const searchResults = document.getElementById('search-results');
        const areaCards = document.querySelectorAll('.area-card');
        const letterNavs = document.querySelectorAll('.letter-nav');
        const accordionGroups = document.querySelectorAll('.accordion-group');

        // Service areas data for search
        const serviceAreasData = {{ stateData | dump | safe }};

        // Search functionality
        searchInput.addEventListener('input', function() {
            const query = this.value.toLowerCase().trim();
            
            if (query.length === 0) {
                searchResults.innerHTML = '';
                searchResults.style.display = 'none';
                return;
            }

            const results = [];
            
            // Search through areas and ZIP codes
            serviceAreasData.areas.forEach(area => {
                const areaName = area.name.toLowerCase();
                const akaNames = area.aka ? area.aka.map(name => name.toLowerCase()) : [];
                const zips = area.zips;
                
                // Check if query matches area name or aka
                if (areaName.includes(query) || akaNames.some(aka => aka.includes(query))) {
                    results.push({
                        type: 'area',
                        name: area.name,
                        aka: area.aka,
                        zips: area.zips
                    });
                }
                
                // Check if query matches any ZIP code
                zips.forEach(zip => {
                    if (zip.includes(query)) {
                        results.push({
                            type: 'zip',
                            name: area.name,
                            aka: area.aka,
                            zips: [zip],
                            matchedZip: zip
                        });
                    }
                });
            });

            // Display results
            if (results.length > 0) {
                searchResults.innerHTML = results.slice(0, 5).map(result => `
                    <div class="search-result">
                        <h4>${result.name}${result.aka ? ` (${result.aka.join(', ')})` : ''}</h4>
                        <div class="zip-codes">
                            ${result.type === 'zip' ? 
                                `ZIP: <strong>${result.matchedZip}</strong>` : 
                                `ZIP codes: ${result.zips.join(', ')}`
                            }
                        </div>
                    </div>
                `).join('');
                searchResults.style.display = 'block';
            } else {
                searchResults.innerHTML = '<div class="search-result">No areas found matching your search.</div>';
                searchResults.style.display = 'block';
            }
        });

        // Letter navigation
        letterNavs.forEach(nav => {
            nav.addEventListener('click', function() {
                const letter = this.dataset.letter;
                const targetGroup = document.querySelector(`[data-letter="${letter}"]`);
                
                if (targetGroup) {
                    // Close all other groups
                    accordionGroups.forEach(group => {
                        if (group !== targetGroup) {
                            group.removeAttribute('open');
                        }
                    });
                    
                    // Open target group
                    targetGroup.setAttribute('open', '');
                    
                    // Scroll to target
                    targetGroup.scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'start' 
                    });
                    
                    // Update active state
                    letterNavs.forEach(n => n.classList.remove('active'));
                    this.classList.add('active');
                }
            });
        });

        // Disable letter navigation for letters with no areas
        const availableLetters = new Set();
        accordionGroups.forEach(group => {
            availableLetters.add(group.dataset.letter);
        });
        
        letterNavs.forEach(nav => {
            if (!availableLetters.has(nav.dataset.letter)) {
                nav.disabled = true;
            }
        });

        // Hide search results when clicking outside
        document.addEventListener('click', function(e) {
            if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                searchResults.style.display = 'none';
            }
        });

        // Keyboard navigation for search results
        searchInput.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                searchResults.style.display = 'none';
                this.blur();
            }
        });
    });
</script>

